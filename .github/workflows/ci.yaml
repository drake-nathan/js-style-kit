name: CI

permissions:
  checks: write
  pull-requests: write
  contents: write

on:
  pull_request:
    types: [opened, synchronize]
    branches: ["main"]
  push:
    branches: ["main"]
    paths-ignore:
      - "**/*[bot]@users.noreply.github.com**"

jobs:
  build:
    name: Build and Test
    runs-on: ubuntu-latest
    env:
      TURBO_TOKEN: ${{ secrets.TURBO_TOKEN }}
      TURBO_TEAM: ${{ vars.TURBO_TEAM }}

    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 2
          token: ${{ secrets.GITHUB_TOKEN }}
          ref: ${{ github.head_ref || github.ref_name }}

      - name: Set up Bun
        uses: oven-sh/setup-bun@v2
        with:
          bun-version: latest

      - name: Restore cache
        uses: actions/cache@v4
        with:
          path: |
            node_modules
            .turbo
          key: ${{ runner.os }}-bun-${{ hashFiles('**/bun.lock') }}-${{ github.sha }}
          restore-keys: |
            ${{ runner.os }}-bun-${{ hashFiles('**/bun.lock') }}-
            ${{ runner.os }}-bun-

      - name: Install dependencies
        run: bun install --frozen-lockfile

      - name: Install global Turbo with Bun
        run: bun add --global turbo@^2

      - name: Sherif Monorepo Check
        run: bun turbo run sherif

      - name: Build
        run: bun turbo run build

      - name: Prettier --write
        run: bun run format

      - name: Commit Prettier changes if needed
        run: |
          git config --global user.name 'github-actions[bot]'
          git config --global user.email 'github-actions[bot]@users.noreply.github.com'

          if [[ -n "$(git status --porcelain)" ]]; then
            git add .
            git commit -m "style: apply prettier formatting"
            
            # For pull requests
            if [ -n "${{ github.head_ref }}" ]; then
              git push origin HEAD:${{ github.head_ref }}
            # For direct pushes to branches
            else
              git push origin HEAD:${{ github.ref_name }}
            fi
            
            echo "Formatting changes were committed and pushed"
          else
            echo "No formatting changes needed"
          fi

      - name: ESLint
        run: bun turbo run lint -- --max-warnings 0

      - name: Markdown lint
        run: bun turbo run lint:md

      - name: Test and generate coverage reports
        id: test-coverage
        run: bun turbo run test:coverage
        continue-on-error: true

      - name: Upload coverage reports to Codecov
        if: steps.test-coverage.outcome == 'success'
        uses: codecov/codecov-action@v5
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
